<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentViewRepository">
  <!--StudentDetailにマッピングします。-->
  <resultMap id="StudentDetailMap" type="raisetech.StudentManagement.domain.StudentDetail">
    <!--Studentとマッピングします。-->
    <association property="student" javaType="raisetech.StudentManagement.data.Student">
      <id property="id" column="id"/>
      <result property="name" column="name"/>
      <result property="hurigana" column="hurigana"/>
      <result property="nickname" column="nickname"/>
      <result property="address" column="address"/>
      <result property="area" column="area"/>
      <result property="years" column="years"/>
      <result property="gender" column="gender"/>
      <result property="remark" column="remark"/>
      <result property="isDeleted" column="isDelete"/>
      <result property="applicationStatus" column="applicationStatus"/>
    </association>
    <!--StudentCourseに含まれる情報をStudentCourseListに変換します。-->
    <collection property="studentCourseList"
      ofType="raisetech.StudentManagement.data.StudentCourse">
      <result property="courseID" column="courseID"/>
      <result property="studentId" column="studentId"/>
      <result property="courses" column="courses"/>
      <result property="start" column="start"/>
      <result property="endDate" column="endDate"/>
      <result property="course_fee" column="course_fee"/>
      <result property="payment_status" column="payment_status"/>
    </collection>
  </resultMap>
  <!--受講生情報とコース情報をつなげます。-->
  <select id="findByCondition" parameterType="raisetech.StudentManagement.dto.SearchStudentForm"
    resultMap="StudentDetailMap">
    SELECT
    s.id,
    s.name,
    s.hurigana,
    s.nickname,
    s.address,
    s.area,
    s.years,
    s.gender,
    s.remark,
    s.isDeleted,
    s.applicationStatus,
    sc.course_id,
    sc.student_id,
    sc.courses,
    sc.start,
    sc.endDate,
    sc.course_fee,
    sc.payment_status
    FROM
    students s
    LEFT JOIN students_courses sc ON s.id = sc.student_id
    <where>
      <!--受講生IDが入力されている場合の検索-->
      <if test="id !=null and id !='' ">
        AND s.id=#{id}
      </if>
      <!--名前が入力されている場合の検索-->
      <if test="name !=null and name !='' ">
        AND s.name LIKE CONCAT('%',#{name},'%')
      </if>
      <!--性別が入力されている場合の検索-->
      <if test="gender !=null and gender !='' ">
        AND s.gender=#{gender}
      </if>
      <!--申し込み状況が入力されている場合の検索-->
      <if test="applicationStatus !=null and applicationStatus !='' ">
        AND s.applicationStatus=#{applicationStatus}
      </if>
    </where>
  </select>

  <!--受講生コース情報の新規登録を行います。コースIDは自動生成されるので省いています。-->
  <insert id="registerStudentCourseAutoCourseId">
    INSERT INTO students_courses(student_id,courses,start,
    endDate,course_fee,payment_status)
    VALUES(#{studentId},#{courses},#{start},#{endDate},#{course_fee},#{payment_status})
  </insert>

  <!--テスト用のコース情報の新規登録のコードです。コースIDは明示しています。-->
  <insert id="registerStudentCourseWithCourseId">
    INSERT INTO students_courses(course_id,student_id,courses,start,
    endDate,course_fee,payment_status)
    VALUES(#{courseID},#{studentId},#{courses},#{start},#{endDate},#{course_fee},#{payment_status})
  </insert>
  <!--受講生検索を行います。-->
  <select id="searchStudentCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT*FROM students_courses WHERE student_id=#{studentId}
  </select>
</mapper>
